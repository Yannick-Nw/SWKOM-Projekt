services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - dms-net

  db:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dms-net

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "8000:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
    networks:
      - dms-net

  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080:8080"
    #  - "8081:8081"
    volumes:
      # - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro # Windows
      # - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro # Windows
      - ${HOME}/.microsoft/usersecrets:/home/app/.microsoft/usersecrets:ro # MAC/LINUX
      - ${HOME}/.aspnet/dev-certs/https:/home/app/.aspnet/https:ro # MAC/LINUX
    networks:
      - dms-net

  web-ui:
    build:
      context: ./web-ui
    ports:
      - "8001:80"
    depends_on:
      - webapi
    networks:
      - dms-net

networks:
  dms-net:
    driver: bridge

volumes:
  data:
  media:
  pgdata:
  redisdata: