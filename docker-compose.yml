services:
  # Optional
  postgres-adminer:
    image: adminer
    ports:
      - 8082:8080
    networks:
      - backend
    restart: always

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: always

  webapi:
    build: ./WebApi
    depends_on:
     - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080"
    networks:
      - frontend
      - backend
    restart: always

  webapp:
    build: ./WebApp
    depends_on:
      - webapi
    ports:
      - "80:80"
    volumes:
      - ./WebApp/nginx.conf:/etc/nginx/nginx.conf  # Binde die Nginx-Konfigurationsdatei ein
      - ./WebApp/html:/app/wwwroot  # Statische Dateien mounten
    networks:
      - frontend
    restart: always

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    postgres_data:   