name: Semester Project CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - uses: actions/checkout@v4

    # Step 2: Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Step 3: Restore Dependencies
    - name: Restore Dependencies
      run: dotnet restore

    # Step 4: Build Project
    - name: Build Project
      run: dotnet build --no-restore --configuration Release

    # Step 5: Run Unit Tests
    - name: Run Unit Tests
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

    # Step 6: Upload Test Results
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: '**/TestResults/*.xml'

  docker-compose:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Step 1: Checkout Code
    - uses: actions/checkout@v4

    # Step 2: Build and Run Docker Containers
    - name: Build and Run Docker Compose (Dev)
      run: |
        docker-compose --env-file .env up -d --build

    # Step 3: Wait for Services to Initialize
    - name: Wait for Services to Initialize
      run: sleep 30

    # Step 4: Run Integration Tests
    - name: Run Integration Tests
      run: |
        curl --fail http://localhost:8080/api/health-check
        curl --fail http://localhost:8080/api/documents

    # Step 5: Stop Docker Services
    - name: Stop Docker Services
      run: docker-compose down

  deploy:
    runs-on: ubuntu-latest
    needs: docker-compose

    steps:
    # Step 1: Checkout Code
    - uses: actions/checkout@v4

    # Step 2: Build and Deploy Docker Containers (Prod)
    - name: Deploy Application
      run: |
        docker-compose --env-file .env.prod up -d --build
